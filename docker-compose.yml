version: '3.8'

services:
  api:
    image: ${DOCKERHUB_USERNAME}/pivo-api:${TAG:-latest}
    container_name: pivo-api
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/pivo
      - REDIS_HOST=redis
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - pivo-network
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  mongodb:
    image: mongo:4.4
    container_name: pivo-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - pivo-network
    deploy:
      placement:
        constraints: [node.role == manager]

  redis:
    image: redis:6-alpine
    container_name: pivo-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pivo-network
    deploy:
      placement:
        constraints: [node.role == manager]

  nginx:
    image: nginx:alpine
    container_name: pivo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - pivo-network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  pivo-network:
    driver: overlay
    attachable: true

volumes:
  mongodb_data:
  redis_data: 